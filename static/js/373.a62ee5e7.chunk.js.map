{"version":3,"file":"static/js/373.a62ee5e7.chunk.js","mappings":"qOAGaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mFAOhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gFAMhBG,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAeO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qL,UCdtBM,EAAWR,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gHASrBO,EAAQT,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kJ,mBCPzBQ,EAAYC,SAASC,cAAc,eAE5BC,EAAY,SAAHC,GAAyC,IAAnCC,EAAcD,EAAdC,eAAgBC,EAAWF,EAAXE,YACpCC,GAAWC,EAAAA,EAAAA,MAYjB,OAAOC,EAAAA,EAAAA,eACLC,EAAAA,EAAAA,KAACZ,EAAQ,CAAAa,UACPC,EAAAA,EAAAA,MAACb,EAAK,CAAAY,SAAA,EACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gCACJD,EAAAA,EAAAA,KAAA,UAAQG,QAdS,WACrBR,GAAe,GACfE,EAAS,aACX,EAWsCI,SAAC,cACjCD,EAAAA,EAAAA,KAAA,UAAQG,QAVY,WACxBR,GAAe,GACfC,EAAY,GACd,EAOyCK,SAAC,eAE3BX,EACjB,ECvBac,EAAc,SAAHV,GAAyC,IAAnCW,EAAIX,EAAJW,KAAMC,EAAQZ,EAARY,SAAUV,EAAWF,EAAXE,YAC5CW,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEd,EAAcc,EAAA,GAE5BG,EAAY,WACZN,EAASO,QACXlB,GAAe,EAEnB,EAEA,OACEO,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAb,SAAA,EACED,EAAAA,EAAAA,KAACrB,EAAI,CAAAsB,SACFI,EAAKU,KAAI,SAAAC,GACR,OAAOhB,EAAAA,EAAAA,KAACjB,EAAI,CAAAkB,UACVD,EAAAA,EAAAA,KAACf,EAAI,CAACkB,QAASS,EAAWK,GAAE,SAAAC,OAAWF,EAAKG,WAAYlB,SAAEe,EAAKG,aAD/CH,EAAKI,GAGzB,MAEDT,IAAeX,EAAAA,EAAAA,KAACP,EAAS,CAACG,YAAaA,EAAaD,eAAgBA,MAG3E,ECvBa0B,EAAQzC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4DCY/B,EAViB,SAAHY,GAAyC,IAAnCW,EAAIX,EAAJW,KAAMC,EAAQZ,EAARY,SAAUV,EAAWF,EAAXE,YAElC,OACEM,EAAAA,EAAAA,MAACmB,EAAK,CAAApB,SAAA,EACJD,EAAAA,EAAAA,KAACI,EAAW,CAACE,SAAUA,EAAUV,YAAaA,EAAaS,KAAMA,KACjEL,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,MAGb,C","sources":["components/Restaurants/Restaurants.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Restaurants/Restaurants.jsx","Pages/MenuPage/MenuPage.styled.jsx","Pages/MenuPage/MenuPage.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 30%;\n`;\n\nexport const Item = styled.li`\n  padding: 12px;\n  border: black 1px solid;\n  border-radius: 12px;\n`;\n\nexport const Link = styled(NavLink)`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  color: black;\n  font-family: 'Josefin Sans';\n  font-size: 24px;\n  &.active {\n    color: #2b7b0c;\n  }\n`;","import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\nbackground-color: rgba(0,0,0,.8);;\n`;\n\nexport const Modal = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 400px;\nheight: 250px;\nbackground-color: white;\n`;","import { useNavigate } from \"react-router-dom\";\nimport { Backdrop, Modal } from \"./Modal.styled\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const RestModal = ({ setIsModalOpen, setShopCart }) => {\n  const navigate = useNavigate();\n\n  const navigateToCart = () => {\n    setIsModalOpen(false)\n    navigate('/shop-cart');\n  };\n\n  const closeAndCrashCart = () => {\n    setIsModalOpen(false)\n    setShopCart([]);\n  };\n\n  return createPortal(\n    <Backdrop>\n      <Modal>\n        <h2>Shopping cart is not empty</h2>\n        <button onClick={navigateToCart}>Navigate</button>\n        <button onClick={closeAndCrashCart}>Close</button>\n      </Modal>\n    </Backdrop>, modalRoot)\n};","import { useState } from \"react\";\nimport { Item, List, Link } from \"./Restaurants.styled\";\nimport { RestModal } from \"components/Modal/Modal\";\n\nexport const Restaurants = ({ menu, shopCart, setShopCart }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  \n  const showModal = () => {\n    if (shopCart.length) {\n      setIsModalOpen(true);\n    }\n  };\n\n  return (\n    <>\n      <List>\n        {menu.map(item => {\n          return <Item key={item.id}>\n            <Link onClick={showModal} to={`/rest/${item.rest_name}`}>{item.rest_name}</Link>\n          </Item>\n        })}\n      </List>\n      {isModalOpen && <RestModal setShopCart={setShopCart} setIsModalOpen={setIsModalOpen} />}\n    </>\n  )\n};","import { styled } from \"styled-components\";\n\nexport const Wrapp = styled.div`\n  padding: 22px;\n  display: flex;\n  gap: 20px;\n`;","import { Restaurants } from \"components/Restaurants/Restaurants\";\nimport { Outlet } from \"react-router-dom\";\nimport { Wrapp } from \"./MenuPage.styled\";\n\nconst MenuPage = ({ menu, shopCart, setShopCart }) => {\n\n  return (\n    <Wrapp>\n      <Restaurants shopCart={shopCart} setShopCart={setShopCart} menu={menu} />\n      <Outlet />\n    </Wrapp>\n  )\n};\n\nexport default MenuPage"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Link","NavLink","_templateObject3","Backdrop","Modal","modalRoot","document","querySelector","RestModal","_ref","setIsModalOpen","setShopCart","navigate","useNavigate","createPortal","_jsx","children","_jsxs","onClick","Restaurants","menu","shopCart","_useState","useState","_useState2","_slicedToArray","isModalOpen","showModal","length","_Fragment","map","item","to","concat","rest_name","id","Wrapp","Outlet"],"sourceRoot":""}